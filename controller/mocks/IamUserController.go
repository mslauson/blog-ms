// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// IamUserController is an autogenerated mock type for the IamUserController type
type IamUserController struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: c
func (_m *IamUserController) CreateUser(c *gin.Context) {
	_m.Called(c)
}

// DeleteUser provides a mock function with given fields: c
func (_m *IamUserController) DeleteUser(c *gin.Context) {
	_m.Called(c)
}

// GetUserById provides a mock function with given fields: c
func (_m *IamUserController) GetUserById(c *gin.Context) {
	_m.Called(c)
}

// ListUsers provides a mock function with given fields: c
func (_m *IamUserController) ListUsers(c *gin.Context) {
	_m.Called(c)
}

// UpdateEmail provides a mock function with given fields: c
func (_m *IamUserController) UpdateEmail(c *gin.Context) {
	_m.Called(c)
}

// UpdatePassword provides a mock function with given fields: c
func (_m *IamUserController) UpdatePassword(c *gin.Context) {
	_m.Called(c)
}

// UpdatePhone provides a mock function with given fields: c
func (_m *IamUserController) UpdatePhone(c *gin.Context) {
	_m.Called(c)
}

type mockConstructorTestingTNewIamUserController interface {
	mock.TestingT
	Cleanup(func())
}

// NewIamUserController creates a new instance of IamUserController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIamUserController(t mockConstructorTestingTNewIamUserController) *IamUserController {
	mock := &IamUserController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
