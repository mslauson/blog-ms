---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: post-ms
  namespace: blog
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      deploy: post-ms
      app: post-ms
  template:
    metadata:
      labels:
        deploy: post-ms
        app: post-ms
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "2112"
        prometheus.io/path: "/metrics"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "chore"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-inject-secret-encryption: "ndt/data/host"
        vault.hashicorp.com/agent-inject-template-host: |
          {{ with secret "ndt/data/host" -}}
            export LOKI_URL="{{ .Data.data.loki }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-host: "ndt/data/encryption"
        vault.hashicorp.com/agent-inject-template-encryption: |
          {{ with secret "ndt/data/encryption" -}}
            export KEY="{{ .Data.data.key }}"
            export IV="{{ .Data.data.iv }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-oauth: "ndt/data/oauth"
        vault.hashicorp.com/agent-inject-template-oauth: |
          {{ with secret "ndt/data/oauth" -}}
            export OAUTH_ADMIN_BASE="{{ .Data.data.authHost }}"
            export OAUTH_ISSUER_BASE="{{ .Data.data.oauthIssuerBase }}"
            export OAUTH_CLIENT_ID="{{ .Data.data.oauthClientId }}"
            export OAUTH_CLIENT_SECRET="{{ .Data.data.oauthClientSecret }}"
          {{- end }}
        vault.hashicorp.com/agent-inject-secret-postgres: "ndt/data/postgres"
        vault.hashicorp.com/agent-inject-template-postgres: |
          {{ with secret "ndt/data/postgres" -}}
            export DB_HOST="{{ .Data.data.dbHost }}"
            export DB_USER="{{ .Data.data.dbUser }}"
            export DB_PASSWORD="{{ .Data.data.dbPassword }}"
            export DB_NAME="{{ .Data.data.dbName }}"
            export DB_SCHEMA="{{ .Data.data.dbSchema }}"
          {{- end }}
    spec:
      serviceAccountName: vault-auth
      containers:
        - name: post-ms
          image: registry.slauson.io/slausonio/post-ms:dev-543c8a5c764758bb445c159fc13c85460675e5e2
          args:
            [
              "sh",
              "-c",
              ". /vault/secrets/encryption && . /vault/secrets/oauth && . /vault/secrets/postgres && . /vault/secrets/host && ./post-ms",
            ]
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 500m
              memory: 200Mi
            requests:
              cpu: 50m
              memory: 100Mi
          envFrom:
            - configMapRef:
                name: general-config
      imagePullSecrets:
        - name: regcred
